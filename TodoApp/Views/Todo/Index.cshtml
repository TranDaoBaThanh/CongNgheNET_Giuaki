@model TodoViewModel
@{
    ViewData["Title"] = "My Tasks";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-5"><i class="bi bi-list-check me-2"></i>My Tasks</h1>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg me-2"></i>New Task
        </a>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" asp-action="Index" id="filterForm">
                <div class="row g-3">
                    <div class="col-md-5">
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" name="searchString" value="@Model.SearchString" class="form-control" placeholder="Search tasks..." />
                            <button type="submit" class="btn btn-outline-secondary">Search</button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select name="statusFilter" class="form-select" onchange="document.getElementById('filterForm').submit()">
                            <option value="" selected="@string.IsNullOrEmpty(Model.StatusFilter)">All Tasks</option>
                            <option value="active" selected="@(Model.StatusFilter == "active")">Active</option>
                            <option value="completed" selected="@(Model.StatusFilter == "completed")">Completed</option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <select name="sortOrder" class="form-select" onchange="document.getElementById('filterForm').submit()">
                            <option value="" selected="@string.IsNullOrEmpty(Model.SortOrder)">Newest First</option>
                            <option value="date" selected="@(Model.SortOrder == "date")">Due Date (Asc)</option>
                            <option value="date_desc" selected="@(Model.SortOrder == "date_desc")">Due Date (Desc)</option>
                            <option value="title" selected="@(Model.SortOrder == "title")">Title (A-Z)</option>
                            <option value="title_desc" selected="@(Model.SortOrder == "title_desc")">Title (Z-A)</option>
                            <option value="priority" selected="@(Model.SortOrder == "priority")">Priority (Low-High)</option>
                            <option value="priority_desc" selected="@(Model.SortOrder == "priority_desc")">Priority (High-Low)</option>
                        </select>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (!Model.Todos.Any())
    {
        <div class="card shadow-sm">
            <div class="card-body text-center p-5">
                <i class="bi bi-inbox text-muted" style="font-size: 4rem;"></i>
                <h3 class="mt-3">No tasks found</h3>
                <p class="text-muted">
                    @if (!string.IsNullOrEmpty(Model.SearchString) || !string.IsNullOrEmpty(Model.StatusFilter))
                    {
                        <span>No tasks match your current filters.</span>
                        <br />
                        <a asp-action="Index" class="btn btn-outline-primary mt-3">Clear Filters</a>
                    }
                    else
                    {
                        <span>You don't have any tasks yet. Create one to get started!</span>
                        <br />
                        <a asp-action="Create" class="btn btn-primary mt-3">
                            <i class="bi bi-plus-lg me-2"></i>Create Task
                        </a>
                    }
                </p>
            </div>
        </div>
    }
    else
    {
        <div class="list-group todo-list">
            @foreach (var todo in Model.Todos)
            {
                <div class="list-group-item list-group-item-action d-flex align-items-center @(todo.IsCompleted ? "bg-light" : "")" id="todo-@todo.Id">
                    <div class="me-auto">
                        <div class="d-flex align-items-center">
                            <form method="post" asp-action="ToggleComplete" asp-route-id="@todo.Id" class="me-3">
                                <button type="submit" class="btn-check-todo" title="@(todo.IsCompleted ? "Mark as incomplete" : "Mark as complete")">
                                    <i class="bi @(todo.IsCompleted ? "bi-check-circle-fill text-success" : "bi-circle text-primary")" style="font-size: 1.5rem;"></i>
                                </button>
                            </form>
                            <div>
                                <h5 class="mb-1 @(todo.IsCompleted ? "text-decoration-line-through text-muted" : "")">@todo.Title</h5>
                                <p class="mb-1 @(todo.IsCompleted ? "text-muted" : "")">@todo.Description</p>
                                <div class="d-flex align-items-center task-meta">
                                    <span class="badge rounded-pill @todo.PriorityClass me-2">@todo.PriorityText</span>
                                    @if (todo.DueDate.HasValue)
                                    {
                                        <small class="me-2 @(todo.IsOverdue ? "text-danger" : "text-muted")">
                                            <i class="bi bi-calendar-event me-1"></i>
                                            @todo.DueDate.Value.ToString("MMM d, yyyy")
                                            @if (todo.IsOverdue)
                                            {
                                                <span>(Overdue)</span>
                                            }
                                        </small>
                                    }
                                    <small class="text-muted">
                                        <i class="bi bi-clock me-1"></i>
                                        @(todo.UpdatedAt.HasValue ? $"Updated {todo.UpdatedAt.Value.ToString("g")}" : $"Created {todo.CreatedAt.ToString("g")}")
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="todo-actions">
                        <a asp-action="Edit" asp-route-id="@todo.Id" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <button type="button" class="btn btn-sm btn-outline-danger" 
                                onclick="confirmDelete(@todo.Id, '@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(todo.Title))')" title="Delete">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete "<span id="deleteTaskTitle"></span>"?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" id="deleteTaskId" name="id" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/todo.js"></script>
}
